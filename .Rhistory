mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
document()
devtools::document()
floratus <- read.csv("C:/Users/MARCO/Dropbox/Dottorato/Pubblicazioni mie/Paper 3 - Ignorance Map/SUBMISSION PACK_TAXON/MATERIALE VARIO/Ignorance-master_OK/Ignorance-master/2a) short_example.csv")
View(floratus)
vfl <- virtual_list(data_flor=floratus[1:10000,], site=park, excl_areas=unsuitablezone, CRS.new=3035, tau=30, upperlimit=25)
DDF_buffer <- rgeos::gBuffer(floratus, width=(floratus$uncertainty), byid=TRUE)
xy <- floratus[,c(2,3)]
ttt <- sp::CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = floratus,
proj4string = ttt)
prova <- rgeos::gBuffer(, width=(data_flor_planar$uncertainty), byid=TRUE)
prova <- rgeos::gBuffer(data_flor_planar, width=(data_flor_planar$uncertainty), byid=TRUE)
plot(prova)
sp::plot(prova)
data_flor_planar
prova <- rgeos::gBuffer(data_flor_planar, width=uncertainty, byid=TRUE)
prova <- rgeos::gBuffer(data_flor_planar, width=uncertainty, byid=TRUE)
prova <- rgeos::gBuffer(data_flor_planar, width=data_flor_planar$uncertainty, byid=TRUE)
sp::plot(prova)
data_flor_planar
pc <- spTransform(data_flor_planar, CRS( "+init=epsg:3035" ) )
pc <- sp::spTransform(data_flor_planar, CRS( "+init=epsg:3035" ) )
library(sp)
library(raster)
xy <- floratus[,c(2,3)]
ttt <- sp::CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = floratus,
proj4string = ttt)
pc <- sp::spTransform(data_flor_planar, CRS( "+init=epsg:3035" ) )
xy <- floratus[,c(2,3)]
ttt <- sp::CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = floratus,
proj4string = ttt)
data_flor_planar <- sp::spTransform(data_flor_planar, CRS( "+init=epsg:3035" ) )
prova <- rgeos::gBuffer(data_flor_planar, width=data_flor_planar$uncertainty, byid=TRUE)
sp::plot(prova)
site_3035 <- sp::spTransform(site, CRS( "+init=epsg:3035" ) )
site_3035 <- sp::spTransform(park, CRS( "+init=epsg:3035" ) )
result <- raster::intersect(data_flor_planar, site_3035)
plot(result)
DDF_buffer
result <- raster::intersect(data_flor_planar, site_3035)
result
result <- raster::intersect(data_flor_planar, site_3035)
plot(result)
plot(site_3035, add=TRUE)
sp::plot(prova)
Devo subsettare con il vettore result il dataframe prova (quelllo coi buffer)
result <- raster::intersect(prova, site_3035)
plot(result)
plot(site_3035, add=TRUE)
data_flor_planar
prova$record <- 1:nrow(site_3035)
head(prova)
nrow(site_3035)
xy <- floratus[,c(2,3)]
ttt <- sp::CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = floratus,
proj4string = ttt)
data_flor_planar <- sp::spTransform(data_flor_planar, CRS( "+init=epsg:3035" ) )
site_3035 <- sp::spTransform(park, CRS( "+init=epsg:3035" ) )
prova$record <- 1:nrow(data_flor_planar)
head(prova)
data(park)
data_flor_planar
data(park)
site_3035 <- sp::spTransform(park, CRS( "+init=epsg:3035" ) )
xy <- floratus[,c(2,3)]
ttt <- sp::CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = floratus,
proj4string = ttt)
data_flor_planar$record <- 1:nrow(data_flor_planar)
data(park)
site_3035 <- sp::spTransform(park, CRS( "+init=epsg:3035" ) )
xy <- floratus[,c(2,3)]
ttt <- sp::CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = floratus,
proj4string = ttt)
data_flor_planar <- sp::spTransform(data_flor_planar, CRS( "+init=epsg:3035" ) )
data_flor_planar$record <- 1:nrow(data_flor_planar)
data_flor_planar
data_flor_planar$record <- 1:nrow(data_flor_planar)
head(data_flor_planar)
empty <- prova[prova$record = data_flor_planar$record,]
empty <- prova[prova$record == data_flor_planar$record,]
plot(empty)
prova$record
result
result <- raster::intersect(prova, site_3035)
result
empty <- prova[prova$record == result$record,]
result$record
empty <- prova[prova$record = result$record,]
empty <- prova[prova$record == result$record,]
filter_buffer <- result$record
empty <- prova[prova$record == filter_buffer,]
plot(empty)
prova$record
filter_buffer
empty2 <- prova[result, ]
plot(empty2)
plot(site_3035, add=TRUE)
document()
library(devtools)
document()
mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
document()
mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
empty
rm(empty)
empty
mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
document()
mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
document()
mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
document()
mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
document()
mfi <- ignorance_map(data_flor=floratus[1:1000,], site=park, tau=20, cellsize=2000)
mfi <- ignorance_map(data_flor=floratus[1:5000,], site=park, tau=20, cellsize=2000)
xy
rm(xy)
data_flor_planar
rm(data_flor_planar)
mfi <- ignorance_map(data_flor=floratus[1:500,], site=park, tau=20, cellsize=2000)
site <- park
data_flor <- floratus[1:500,]
start_time <- Sys.time() ## starting time
raster::crs(site) <- sp::CRS("+init=epsg:4326")
CRS.new <- paste0("+init=epsg:", CRS.new)
print(paste0("Chosen Coordinate Reference System:", " ", CRS.new))
print(paste0("Chosen tau:", " ", tau))
CRS.new <- 3035
start_time <- Sys.time() ## starting time
raster::crs(site) <- sp::CRS("+init=epsg:4326")
CRS.new <- paste0("+init=epsg:", CRS.new)
print(paste0("Chosen Coordinate Reference System:", " ", CRS.new))
print(paste0("Chosen tau:", " ", tau))
tau <-30
start_time <- Sys.time() ## starting time
raster::crs(site) <- sp::CRS("+init=epsg:4326")
CRS.new <- paste0("+init=epsg:", CRS.new)
print(paste0("Chosen Coordinate Reference System:", " ", CRS.new))
print(paste0("Chosen tau:", " ", tau))
data_flor_planar <- data_flor
data_flor_planar$record <- 1:nrow(data_flor_planar)
xy <- data_flor_planar[,c(2,3)]
ttt <- sp::CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = data_flor_planar, proj4string = ttt)
data_flor_planar <- sp::spTransform(data_flor_planar, CRS.new)
points_3035 <- data_flor_planar
site_3035 <- sp::spTransform(site, CRS.new)
print("ok1")
data_flor_planar$lat <- data_flor_planar@coords[,2]
data_flor_planar$long <- data_flor_planar@coords[,1]
data_flor_planar <- sp::spTransform(data_flor_planar, CRS.new)
CRS.new
data_flor_planar
data_flor_planar <- sp::spTransform(data_flor_planar, CRS.new)
library(rgdal)
data_flor_planar <- sp::spTransform(data_flor_planar, CRS.new)
data_flor_planar
CRS.new
library(sp)
data_flor_planar <- sp::spTransform(data_flor_planar, CRS.new)
data_flor_planar
data_flor_planar <- sp::spTransform(data_flor_planar, CRS.new)
points_3035 <- data_flor_planar
site_3035 <- sp::spTransform(site, CRS.new)
document()
empoli
wiki <- read.csv("C:/Users/MARCO/Google Drive/Lavori UniPI/Wikiplantbase dataset/Wiki_ago2020_ignorance.csv")
View(wiki)
comuni <- readOGR(dsn = 'c:/Users/MARCO/Desktop/CANCELLARE/ambiti_amministrativi/ambiti_amministrativi_34780f28e0740c485ca9e4db4d88e346', layer = 'am_com_multipart')
crs(comuni) <- CRS("+init=epsg:3003")
plot(comuni)
empoli <- comuni[comuni$NOME == "EMPOLI", ]
plot(empoli)
library(rgdal)
library(raster)
library(rgeos)
comuni <- readOGR(dsn = 'c:/Users/MARCO/Desktop/CANCELLARE/ambiti_amministrativi/ambiti_amministrativi_34780f28e0740c485ca9e4db4d88e346', layer = 'am_com_multipart')
crs(comuni) <- CRS("+init=epsg:3003")
plot(comuni)
empoli <- comuni[comuni$NOME == "EMPOLI", ]
plot(empoli)
site <- empoli
site_3003 <- site
plot(site_3003)
CRS.new <- CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
empoli <- spTransform(site_3003, CRS.new)
empoli
prova2 <- ignorance_map(
wiki,
empoli,
2020,
excl_areas = NULL,
3035,
20,
cellsize=2000
)
library(ignobioR)
prova <- virtual_list(
floratus[1:1000,],
park,
2020,
excl_areas = NULL,
3035,
20,
20
)
prova2 <- ignorance_map(
wiki,
empoli,
2020,
excl_areas = NULL,
3035,
20,
cellsize=2000
)
prova2 <- ignorance_map(
floratus,
park,
2020,
excl_areas = NULL,
3035,
20,
cellsize=5000
)
prova2 <- ignorance_map(
floratus[1:1000,],
park,
2020,
excl_areas = NULL,
3035,
20,
cellsize=5000
)
library(ignobioR)
data(floratus)
data(park)
data(unsuitablezone)
head(floratus)
vfl <- virtual_list(data_flor=floratus, site=park, tau=20) # draft the Virtual floristic List
document()
library(devtools)
document()
library(ignobioR)
data(floratus)
data(park)
data(unsuitablezone)
head(floratus)
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
library(ignobioR)
data(floratus)
data(park)
data(unsuitablezone)
head(floratus)
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
if(!require(devtools)){install.packages("devtools"); library(devtools)}
install_github("interacquas/ignobioR")
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
library(ignobioR)
data(floratus)
data(park)
data(unsuitablezone)
head(floratus)
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
warnings()
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], site=park, tau=20) # draft the Virtual floristic List
vfl <- virtual_list(data_flor=floratus[1:3000,], site=park, tau=20) # draft the Virtual floristic List
vfl <- virtual_list(data_flor=floratus[1:5000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:5000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:5000,], site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:5000,], unsuitablezone=unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
unsuitablezone
vfl <- virtual_list(data_flor=floratus[1:5000,], excl_areas = =unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
vfl <- virtual_list(data_flor=floratus[1:5000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
document()
vfl <- virtual_list(data_flor=floratus[1:1000,], excl_areas = unsuitablezone,
site=park, tau=20) # draft the Virtual floristic List
##### Build the Vignette
build_vignettes(
pkg = ".",
dependencies = "VignetteBuilder",
clean = TRUE,
upgrade = "never",
quiet = TRUE,
install = TRUE,
keep_md = TRUE
)
##### COSTRUIRE IL SITO INTERNET
# Install release version from CRAN
library("pkgdown")
# Run once to configure your package to use pkgdown usethis::use_pkgdown()
# Run to build the website
pkgdown::build_site()
install.packages("pkgdown")
# Run once to configure your package to use pkgdown usethis::use_pkgdown()
# Run to build the website
pkgdown::build_site()
mfi <-  ignorance_map(data_flor= floratus, excl_areas= unsuitablezone,site=park, tau= 20, cellsize= 1000)
data(floratus)
data(park)
data(unsuitablezone)
head(floratus)
mfi <-  ignorance_map(data_flor= floratus, excl_areas= unsuitablezone,site=park, tau= 20, cellsize= 1000)
library(ignobioR)
data(floratus)
data(park)
data(unsuitablezone)
head(floratus)
mfi <-  ignorance_map(data_flor= floratus, excl_areas= unsuitablezone,site=park, tau= 20, cellsize= 1000)
if(!require(devtools)){install.packages("devtools"); library(devtools)}
install_github("interacquas/ignobioR")
detach("package:ignobioR", unload=TRUE)
if(!require(devtools)){install.packages("devtools"); library(devtools)}
install_github("interacquas/ignobioR")
library(ignobioR)
data(floratus)
data(park)
data(unsuitablezone)
head(floratus)
mfi <-  ignorance_map(data_flor= floratus[1:1000,], excl_areas= unsuitablezone,site=park, tau= 20, cellsize= 1000)
vfl <- virtual_list(data_flor=floratus, excl_areas = unsuitablezone,
site=park, tau=20)
vfl$VFL
head(vfl$VFL)
head(vfl$VFL)
vfl$VFL[1:10,]
min(vfl$VFL$Estimated_Spatiotemporal_probability)
vfl$VFL[vfl$VFL$Estimated_Spatiotemporal_probability=0.2,]
vfl$VFL[vfl$VFL$Estimated_Spatiotemporal_probability==0.2,]
vfl$VFL[vfl$VFL$Estimated_Spatiotemporal_probability==100,]
mrow(vfl$VFL[vfl$VFL$Estimated_Spatiotemporal_probability==100,])
nrow(vfl$VFL[vfl$VFL$Estimated_Spatiotemporal_probability==100,])
nrow(vfl$VFL)
document()
mfi <-  ignorance_map(data_flor= floratus, excl_areas= unsuitablezone,site=park, tau= 20, cellsize= 1000)
mfi <-  ignorance_map(data_flor= floratus[1:500,], excl_areas= unsuitablezone,site=park, tau= 20, cellsize= 1000)
CRS.new <- 3035
start_time <- Sys.time() ## starting time
rgdal::set_thin_PROJ6_warnings(TRUE)
raster::crs(site) <- sp::CRS("+init=epsg:4326")
CRS.new <- paste0("+init=epsg:", CRS.new)
message()
message("##############################################################################################")
message("Please be patient. The process can be very slow, dependeing on the amount of records provided")
message("##############################################################################################")
message()
message(paste0("Chosen Coordinate Reference System:", " ", CRS.new))
message(paste0("Chosen tau:", " ", tau))
tau <- 20
excl_areas <- unsuitablezone
site <- park
if(is.null(excl_areas)==TRUE)
{message("No unsuitable areas provided")
cont <- 0} else {message("Unsuitable areas provided. Plotting")
sp::plot(excl_areas, col=rgb(1,0,0, 0.2), main="Unsuitable areas")
sp::plot(site, border="black", lty=2, lwd=2, add=TRUE)
cont <- 1}
data_flor_planar <- data_flor
data_flor <- floratus[1:500,]
data_flor_planar <- data_flor
data_flor_planar$record <- 1:nrow(data_flor_planar)
xy <- data_flor_planar[,c(2,3)]
ttt <- sp::CRS("+init=epsg:4326")
data_flor_planar <- sp::SpatialPointsDataFrame(coords = xy, data = data_flor_planar, proj4string = ttt)
if(cont==1)
{
raster::crs(excl_areas) <- sp::CRS("+init=epsg:4326")
# Crop the study area shapefile using unsuitable areas
excl_areas <- raster::crop(excl_areas, raster::extent(data_flor_planar))
excl_areas_3035 <- sp::spTransform(excl_areas, "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs") # conversion to new CRS
}
data_flor_planar <- sp::spTransform(data_flor_planar, "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs")
points_3035 <- data_flor_planar
site_3035 <- sp::spTransform(site, "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs")
data_flor_planar$lat <- data_flor_planar@coords[,2]
data_flor_planar$long <- data_flor_planar@coords[,1]
ttt
if(cont==1)
{
raster::crs(excl_areas) <- sp::CRS("+init=epsg:4326")
# Crop the study area shapefile using unsuitable areas
excl_areas <- raster::crop(excl_areas, raster::extent(data_flor_planar))
excl_areas_3035 <- sp::spTransform(excl_areas, "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs") # conversion to new CRS
}
data_flor_planar <- sp::spTransform(data_flor_planar, "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs")
points_3035 <- data_flor_planar
site_3035 <- sp::spTransform(site, "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs")
data_flor_planar$lat <- data_flor_planar@coords[,2]
data_flor_planar$long <- data_flor_planar@coords[,1]
site_3035
CRS.new
excl_areas_3035 <- sp::spTransform(excl_areas, CRS.new) # conversion to new CRS
data_flor_buffer <- rgeos::gBuffer(data_flor_planar, width=(data_flor_planar$uncertainty), byid=TRUE)
result <- raster::intersect(data_flor_buffer, site_3035)
DF <- as.data.frame(result)
points_INS <- raster::intersect(points_3035, site_3035)
# Create a vector with taxa present in the input dataframe
list <- unique(DF$Taxon)
list <- as.vector(list)
# Create an empty raster
message("Creating an empty raster")
filter_buffer <- result$record
empty <- data_flor_buffer[filter_buffer, ]
r <- raster::raster()
raster::xmin(r) <- min(empty@bbox[1,1]) - max(data_flor$uncertainty)
raster::xmax(r) <- max(empty@bbox[1,2]) + max(data_flor$uncertainty)
raster::ymin(r) <- min(empty@bbox[2,1]) - max(data_flor$uncertainty)
raster::ymax(r) <- max(empty@bbox[2,2]) + max(data_flor$uncertainty)
raster::res(r) <- cellsize
raster::crs(r) <- raster::crs(site_3035) # ho modificato questa riga, controllare
raster::values(r) <- 1:raster::ncell(r)
r2 <- r
r2[]<-NA
cellsize <- 2000
r <- raster::raster()
raster::xmin(r) <- min(empty@bbox[1,1]) - max(data_flor$uncertainty)
raster::xmax(r) <- max(empty@bbox[1,2]) + max(data_flor$uncertainty)
raster::ymin(r) <- min(empty@bbox[2,1]) - max(data_flor$uncertainty)
raster::ymax(r) <- max(empty@bbox[2,2]) + max(data_flor$uncertainty)
raster::res(r) <- cellsize
raster::crs(r) <- raster::crs(site_3035) # ho modificato questa riga, controllare
raster::values(r) <- 1:raster::ncell(r)
r2 <- r
r2[]<-NA
message("Calculating species richness per cell")
rich <- raster::rasterize(data_flor_planar, r, 'Taxon', function(x, ...) length(unique(na.omit(x))))
rich[is.na(rich)] <- 0
message("Preparing preliminary data to draft the Map of Floristic Ignorance")
included_species <- GISTools::poly.counts(data_flor_planar, site_3035)
number_included_species <- max(included_species)
TA2<- sp::geometry(data_flor_planar)
sapply(sp::over(site_3035, TA2, returnList = FALSE), length)
filter_buffer <- result$record
empty <- data_flor_buffer[filter_buffer, ]
sp::plot(site_3035, lwd=2,main="Intersecting buffers")
sp::plot(empty, border="black", col=rgb(0,0,1, 0.1), add=TRUE, lty=2)
sp::plot(site_3035, lwd=0.01, main= "Intersecting buffers (Area of exclusion considered)")
sp::plot(rgeos::gDifference(empty, excl_areas_3035, byid=TRUE), border="black", col=rgb(0,0,1, 0.1), add=TRUE, lty=2)
sp::plot(site_3035, lwd=2, border="red", main="Intersecting buffers (Area of exclusion considered)", add=TRUE)
mfi <-  ignorance_map(data_flor= floratus[1:500,], excl_areas= unsuitablezone,site=park, tau= 20, cellsize= 1000)

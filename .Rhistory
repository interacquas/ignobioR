ggplot2::ggplot(test_df2) + ggplot2::coord_equal() + ggplot2::theme_classic() +
ggplot2::theme(legend.position="right", legend.direction='vertical', legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::geom_tile(data=test_df2, mapping=ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8) +
ggplot2::geom_polygon(data=site_3035, mapping=ggplot2::aes(x=long, y=lat, group=group),fill=NA, color="black", size=1) +
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping = ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10))), limits = c(0, raster::maxValue(raster_new_rich)))+
ggplot2::ggtitle("Traditional richness map (without uncertainties)")+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new),raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=base::rev(seq(0, raster::maxValue(raster_new),raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')
ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=base::rev(seq(0, raster::maxValue(raster_new),raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=base::rev(seq(0, raster::maxValue(raster_new),raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)+
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = +1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)+
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df2) + ggplot2::coord_equal() + ggplot2::theme_classic() +
ggplot2::theme(legend.position="right", legend.direction='vertical', legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::geom_tile(data=test_df2, mapping=ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8) +
ggplot2::geom_polygon(data=site_3035, mapping=ggplot2::aes(x=long, y=lat, group=group),fill=NA, color="black", size=1) +
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping = ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = -1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10))), limits = c(0, raster::maxValue(raster_new_rich)))+
ggplot2::ggtitle("Traditional richness map (without uncertainties)")+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")
ggplot2::ggplot(test_df2) + ggplot2::coord_equal() + ggplot2::theme_classic() +
ggplot2::theme(legend.position="right", legend.direction='vertical', legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::geom_tile(data=test_df2, mapping=ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8) +
ggplot2::geom_polygon(data=site_3035, mapping=ggplot2::aes(x=long, y=lat, group=group),fill=NA, color="black", size=1) +
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping = ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = +1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10))), limits = c(0, raster::maxValue(raster_new_rich)))+
ggplot2::ggtitle("Traditional richness map (without uncertainties)")+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = +1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)+
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = +1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)+
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
document()
prova <- ignorance_map(datashort[100:300,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
DF
ggplot2::ggplot(DF)+
ggplot2::aes(x = year, y = ..count../sum(..count..))+
ggplot2::geom_histogram(alpha=.6, fill="#FF6666", binwidth = diff(range(DF$year))/30)+
ggplot2::coord_cartesian(xlim = c(min(DF$year), year_study))+
ggplot2::scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ggplot2::ggtitle("Occurrence dates distribution")+
ggplot2::xlab("Year") + ggplot2::ylab("Density")+
ggplot2::labs(fill="Number of taxa")+
ggplot2::theme_classic()
DF <- datashort
ggplot2::ggplot(DF)+
ggplot2::aes(x = year, y = ..count../sum(..count..))+
ggplot2::geom_histogram(alpha=.6, fill="#FF6666", binwidth = diff(range(DF$year))/30)+
ggplot2::coord_cartesian(xlim = c(min(DF$year), year_study))+
ggplot2::scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ggplot2::ggtitle("Occurrence dates distribution")+
ggplot2::xlab("Year") + ggplot2::ylab("Density")+
ggplot2::labs(fill="Number of taxa")+
ggplot2::theme_classic()
year_study <- 2020
ggplot2::ggplot(DF)+
ggplot2::aes(x = year, y = ..count../sum(..count..))+
ggplot2::geom_histogram(alpha=.6, fill="#FF6666", binwidth = diff(range(DF$year))/30)+
ggplot2::coord_cartesian(xlim = c(min(DF$year), year_study))+
ggplot2::scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ggplot2::ggtitle("Occurrence dates distribution")+
ggplot2::xlab("Year") + ggplot2::ylab("Density")+
ggplot2::labs(fill="Number of taxa")+
ggplot2::theme_classic()
document()
prova <- ignorance_map(datashort[100:300,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[100:300,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
ggplot(DF) +
aes(x = uncertainty, y = ..count../sum(..count..)) +
geom_histogram(alpha=.6, fill="#FF6666", binwidth = diff(range(DF$uncertainty))/30)+
coord_cartesian(xlim = c(min(DF$uncertainty), max(DF$uncertainty)))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ggtitle("Occurrence uncertainties distribution")+
xlab("Uncertainty") + ylab("Density")+
theme_classic()
ggplot2::ggplot(DF)+
ggplot2::aes(x = year, y = ..count../sum(..count..))+
ggplot2::geom_histogram(alpha=.6, fill="#FF6666", binwidth = diff(range(DF$year))/30)+
ggplot2::coord_cartesian(xlim = c(min(DF$year), year_study))+
ggplot2::scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ggplot2::ggtitle("Occurrence dates distribution")+
ggplot2::xlab("Year") + ggplot2::ylab("Density")+
ggplot2::labs(fill="Number of taxa")+
ggplot2::theme_classic()
ggplot2::ggplot(DF) +
ggplot2::aes(x = uncertainty, y = ..count../sum(..count..)) +
ggplot2::geom_histogram(alpha=.6, fill="#FF6666", binwidth = diff(range(DF$uncertainty))/30)+
ggplot2::coord_cartesian(xlim = c(min(DF$uncertainty), max(DF$uncertainty)))+
ggplot2::scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ggplot2::ggtitle("Occurrence uncertainties distribution")+
ggplot2::xlab("Uncertainty") + ggplot2::ylab("Density")+
ggplot2::theme_classic()
document()
prova <- ignorance_map(datashort[100:300,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
check()
document()
install_github("interacquas/ignobioR")
library(ignobioR)
data(site)
data(datashort)
prova <- ignorance_map(datashort[100:300,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova
prova <- ignorance_map(datashort, site, 2020, excl_areas=exclareas, 2000, 3035, 20)
virtual_list()
virtual_list()
virtual <- virtual_list(datashort, site, 2020, excl_areas=NULL, 3035, 20, 20)
virtual
document()
library(ignobioR)
help(virtual_list)
document()
hel(virtual_list)
help(virtual_list)
document()
help(virtual_list)
document()
help(virtual_species)
help(virtual_list)
document()
help(virtual_list)
document()
help(virtual_list)
document()
help(virtual_list)
document()
help(virtual_list)
document()
help(virtual_list)
document()
help(virtual_list)
document()
help(virtual_list)
document()
help(ignorance_map)
document()
help(ignorance_map)
document()
help(ignorance_map)
help(ignorance_map)
help(virtual_list)
document()
help(virtual_list)
help(ignorance_map)
document()
help(virtual_list)
help(ignorance_map)
document()
help(ignorance_map)
ignobioR
library(ignobioR)
library(ignobioR)
data(site)
data(datashort)
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:5000,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:2000,], site, 2020, excl_areas=exclareas, 1000, 3035, 20)
prova <- ignorance_map(datashort[1:2000,], site, 2020, excl_areas=exclareas, 1000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:2000,], site, 2020, excl_areas=exclareas, 1000, 3035, 20)
prova <- ignorance_map(datashort[1:4000,], site, 2020, excl_areas=exclareas, 1000, 3035, 20)
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10^3, 3035, 20)
prova <- ignorance_map(datashort, site, 2020, excl_areas=exclareas, 10^3, 3035, 20)
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10^3, 3035, 20)
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
p1 <- ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = +1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)+
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
p1
ggplot2::ggplot(test_df)+ ggplot2::coord_equal()+ ggplot2::theme_classic()+
ggplot2::labs(fill="IFI")+
ggplot2::theme(legend.position="right",legend.direction='vertical')+ ggplot2::theme(legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = +1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new), raster::maxValue(raster_new)/10))), limits = c(0, raster::maxValue(raster_new)))+
ggplot2::geom_tile(test_df, mapping = ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8)+
ggplot2::geom_polygon(site_3035, mapping= ggplot2::aes(x=long, y=lat, group=group), fill=NA, color="black", size=1)+
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping=ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::ggtitle("Map of Floristic Ignorance (MFI)")
ggplot2::ggplot(test_df2) + ggplot2::coord_equal() + ggplot2::theme_classic() +
ggplot2::theme(legend.position="right", legend.direction='vertical', legend.key.width=grid::unit(0.6, "cm"))+
ggplot2::geom_tile(data=test_df2, mapping=ggplot2::aes(x=.data$x, y=.data$y, fill=.data$value), alpha=0.8) +
ggplot2::geom_polygon(data=site_3035, mapping=ggplot2::aes(x=long, y=lat, group=group),fill=NA, color="black", size=1) +
ggplot2::geom_polygon(data=raster::rasterToPolygons(raster_new), mapping = ggplot2::aes(x=long, y=lat, group=group), color="black", alpha=0)+
ggplot2::scale_fill_distiller(palette = "Spectral", direction = +1, guide = ggplot2::guide_legend(),breaks=rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10)),
labels=round(rev(seq(0, raster::maxValue(raster_new_rich), raster::maxValue(raster_new_rich)/10))), limits = c(0, raster::maxValue(raster_new_rich)))+
ggplot2::ggtitle("Traditional richness map (without uncertainties)")+
ggplot2::xlab("Latitude") + ggplot2::ylab("Longitude")
document()
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
raster_new
document()
data(site)
data(datashort)
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
test_df
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:1000,], site, 2020, excl_areas=exclareas, 10000, 3035, 20)
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova$Uncertainties
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova$Uncertainties
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova$Uncertainties
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 110)
document()
rast1 <- prova$MFI
rast1
site_3035
site
site_3035 <- sp::spTransform(site, CRS.new)
CRS.new <- 3035
CRS.new <- paste0("+init=epsg:", CRS.new)
site_3035 <- sp::spTransform(site, CRS.new)
extend(rast1, extent(site_3035), value=0)
rast2 <- extend(rast1, extent(site_3035), value=0)
plot(rast2)
plot(site_3035, add=TRUE)
e <- raster::extent(site_3035)
e
e[[1]]
e[1]
extent(site_3035)
rast1 <- prova$MFI
e <- raster::extent(site_3035)
rast2 <- extend(rast1, extent(e[1]-cellsize, e[2] + cellsize, e[3] - cellsize, e[4]+cellsize), value=0)
#####
cellsize <- 2000
cellsize <- 2000
rast1 <- prova$MFI
e <- raster::extent(site_3035)
rast2 <- extend(rast1, extent(e[1]-cellsize, e[2] + cellsize, e[3] - cellsize, e[4]+cellsize), value=0)
#see results
plot(rast2)
plot(site_3035, add=TRUE)
cellsize <- 2000
rast1 <- prova$MFI
e <- raster::extent(site_3035)
rast2 <- raster::extend(rast1, extent(e[1]-cellsize, e[2] + cellsize, e[3] - cellsize, e[4]+cellsize), value=0)
rast3 <- raster::intersect(rast2, site_3035)
#see results
plot(rast3)
plot(site_3035, add=TRUE)
#see results
plot(rast2)
plot(site_3035, add=TRUE)
plot(rast3)
plot(site_3035, add=TRUE)
plot(rast2)
plot(site_3035, add=TRUE)
rast3 <- raster::mask(rast2, site_3035)
plot(rast3)
plot(site_3035, add=TRUE)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
plot(prova$MFI)
plot(site_3035, add=TRUE)
document()
cellsize <- 2000
rast1 <- prova$MFI
e <- raster::extent(site_3035)
rast2 <- raster::extend(rast1, extent(e[1]-cellsize, e[2] + cellsize, e[3] - cellsize, e[4]+cellsize), value=0)
rast3 <- raster::mask(rast2, site_3035)
#see results
plot(rast2)
plot(site_3035, add=TRUE)
plot(rast3)
plot(site_3035, add=TRUE)
#see results
plot(rast2)
plot(site_3035, add=TRUE)
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
#see results
plot(rast2)
plot(site_3035, add=TRUE)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:4000,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
plot(prova$MFI)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
e
document()
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:500,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:30000,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
ved <- raster::rasterize(datashort[1:100,], r, 'Taxon', function(x, ...) length(unique(na.omit(x))))
ved <- raster::rasterize(datashort[1:100,], rast1, 'Taxon', function(x, ...) length(unique(na.omit(x))))
document()
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
document()
prova <- ignorance_map(datashort[1:100,], site, 2020, excl_areas=exclareas, 2000, 3035, 20)
sessionInfo()
options(defaultPackages = NULL)
ignorance_map(datashort[1:1000,], site, 2020, excl_areas = exclareas, 3035, 20, 10000)
library(ignobioR)
ignorance_map(datashort[1:1000,], site, 2020, excl_areas = exclareas, 3035, 20, 10000)
virtual_list(datashort[1:1000,], site, 2020, excl_areas=exclareas, 3035, 20, 20)
vfl <- virtual_list(datashort[1:1000,], site, 2020, excl_areas=exclareas, 3035, 20, 20)
ignorance_map(datashort[1:1000,], site, 2020, excl_areas = exclareas, 3035, 20, 10000)
virtual_list
vfl <- virtual_list(data_flor=datashort[1:1000,], site = site, year= 2020, CRS.new= 3035, tau=20, upperlimit=20)
vfl <- virtual_list(data_flor=datashort[1:1000,], site = site, year= 2020, CRS.new= 3035, tau=20)
Sys.Date()
Sys.Date(year)
Sys.Date("%a")
year_study <- Sys.Date(%a)
year_study <- Sys.Date()
substr(year_study, start = 1, stop = 4)
library(ignobioR)
library(ignobioR)
library(ignobioR)
virtual_list(data_flor = datashort[1:1000,], site=site, tau = 20)
ignorance_map(data_flor = datashort[1:10,], site=site, 20, 1000)
data("datashort")
data_flor <- datashort
year_study <- 2020
year_study <- NULL
if (length(year_study) ==0)
{
year_study <- Sys.Date()
year_study <- as.numeric(substr(year_study, start = 1, stop = 4))
}
year_study
if (max(data_flor$year) > year_study)
{
stop("Some occurrence dates are more recent than the year of the study")
}
year_study <- 3020
if (max(data_flor$year) > year_study)
{
stop("Some occurrence dates are more recent than the year of the study")
}
year_study <- 2000
if (max(data_flor$year) > year_study)
{
stop("Some occurrence dates are more recent than the year of the study")
}
data_flor
ignorance_map(data_flor=datashort, site=site, year_study=NULL, 20, 2000)
ignorance_map(data_flor=datashort, site=site, year_study=NULL, tau=20, cellsize=2000)
ignorance_map(data_flor=datashort[1:100,], site=site, year_study=NULL, tau=20, cellsize=2000)
ignorance_map(data_flor=datashort[1:100,], site=site, year_study=2020, tau=20, cellsize=2000)
ignorance_map(data_flor=datashort[1:100,], site=site, year_study=1980, tau=20, cellsize=2000)
ignorance_map(data_flor=datashort[1:100,], site=site, tau=20, cellsize=2000)
library(ignobioR)
ignorance_map(data_flor=datashort[1:100,], site=site, tau=20, cellsize=2000)
# Install release version from CRAN
install.packages("pkgdown")
# Run once to configure your package to use pkgdown
usethis::use_pkgdown()
Use pkgdown to update your website:
# Run to build the website
pkgdown::build_site()
